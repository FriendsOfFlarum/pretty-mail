{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@fof/pretty-mail/webpack/bootstrap","webpack://@fof/pretty-mail/webpack/runtime/compat get default export","webpack://@fof/pretty-mail/webpack/runtime/define property getters","webpack://@fof/pretty-mail/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/pretty-mail/webpack/runtime/make namespace object","webpack://@fof/pretty-mail/external root \"flarum.core.compat['admin/app']\"","webpack://@fof/pretty-mail/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/pretty-mail/external root \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@fof/pretty-mail/external root \"flarum.core.compat['common/components/Button']\"","webpack://@fof/pretty-mail/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@fof/pretty-mail/external root \"flarum.core.compat['common/components/FieldSet']\"","webpack://@fof/pretty-mail/./src/admin/components/PrettyMailSettingsPage.tsx","webpack://@fof/pretty-mail/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/pretty-mail/./src/admin/defaults.ts","webpack://@fof/pretty-mail/./src/admin/components/index.ts","webpack://@fof/pretty-mail/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/ExtensionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/FieldSet'];","import app from 'flarum/admin/app';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport Button from 'flarum/common/components/Button';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Mithril from 'mithril';\nimport FieldSet from 'flarum/common/components/FieldSet';\n\nimport * as defaults from '../defaults';\n\nexport default class PrettyMailSettingsPage extends ExtensionPage {\n  content() {\n    return (\n      <div className=\"PrettyMailSettingsPage\">\n        <div className=\"container\">\n          <div className=\"Form-group\">\n            <h2>{app.translator.trans('fof-pretty-mail.admin.settings.label')}</h2>\n            <FieldSet label={app.translator.trans('fof-pretty-mail.admin.settings.attributes_label')}>\n              {this.templateAttributes().map((attribute) => {\n                return (\n                  <p className=\"helpText\">\n                    <code>${attribute}</code> - {app.translator.trans(`fof-pretty-mail.admin.settings.attributes.${attribute}`)}\n                  </p>\n                );\n              })}\n            </FieldSet>\n            <p className=\"helpText\">{app.translator.trans('fof-pretty-mail.admin.settings.template_help')}</p>\n            {this.buildSettingComponent({\n              label: app.translator.trans('fof-pretty-mail.admin.settings.default'),\n              type: 'textarea',\n              setting: 'fof-pretty-mail.mailhtml',\n              rows: 10,\n            })}\n            <Button\n              className=\"Button\"\n              onclick={() => {\n                this.settings['fof-pretty-mail.mailhtml'](defaults.mailto);\n                m.redraw();\n              }}\n            >\n              {app.translator.trans('fof-pretty-mail.admin.settings.reset')}\n            </Button>\n            <div className=\"PrettyMailSettingsPage--specificTemplates\">\n              <h2>{app.translator.trans('fof-pretty-mail.admin.settings.notifications')}</h2>\n              <p className=\"helpText\">{app.translator.trans('fof-pretty-mail.admin.settings.notificationHelp')}</p>\n              {this.templateItems().toArray()}\n            </div>\n            <div className=\"PrettyMailSettingsPage--CssSettings\">\n              <h2>{app.translator.trans('fof-pretty-mail.admin.css_settings.label')}</h2>\n              {this.cssItems().toArray()}\n            </div>\n          </div>\n          {this.submitButton()}\n        </div>\n      </div>\n    );\n  }\n\n  templateAttributes() {\n    return ['body', 'forumStyle', 'url', 'settings', 'link'].concat(app.forum.attribute('fof-pretty-mail.extra-template-attrs'));\n  }\n\n  cssItems() {\n    const items = new ItemList<Mithril.Children>();\n\n    items.add(\n      'include-css',\n      this.buildSettingComponent({\n        label: app.translator.trans('fof-pretty-mail.admin.css_settings.switch_label'),\n        help: app.translator.trans('fof-pretty-mail.admin.css_settings.help', { strong: <strong /> }),\n        type: 'bool',\n        setting: 'fof-pretty-mail.includeCSS',\n      }),\n      90\n    );\n\n    return items;\n  }\n\n  templateItems() {\n    const items = new ItemList<Mithril.Children>();\n\n    items.add(\n      'user-mentioned',\n      <div>\n        {this.buildSettingComponent({\n          label: app.translator.trans('fof-pretty-mail.admin.settings.userMentioned'),\n          type: 'textarea',\n          setting: 'fof-pretty-mail.userMentioned',\n          rows: 10,\n        })}\n        <Button\n          className=\"Button\"\n          onclick={() => {\n            this.settings['fof-pretty-mail.userMentioned'](defaults.userMentioned);\n            m.redraw();\n          }}\n        >\n          {app.translator.trans('fof-pretty-mail.admin.settings.reset')}\n        </Button>\n      </div>,\n      95\n    );\n\n    items.add(\n      'post-mentioned',\n      <div>\n        {this.buildSettingComponent({\n          label: app.translator.trans('fof-pretty-mail.admin.settings.postMentioned'),\n          type: 'textarea',\n          setting: 'fof-pretty-mail.postMentioned',\n          rows: 10,\n        })}\n        <Button\n          className=\"Button\"\n          onclick={() => {\n            this.settings['fof-pretty-mail.postMentioned'](defaults.postMentioned);\n            m.redraw();\n          }}\n        >\n          {app.translator.trans('fof-pretty-mail.admin.settings.reset')}\n        </Button>\n      </div>,\n      90\n    );\n\n    items.add(\n      'new-post',\n      <div>\n        {this.buildSettingComponent({\n          label: app.translator.trans('fof-pretty-mail.admin.settings.newPost'),\n          type: 'textarea',\n          setting: 'fof-pretty-mail.newPost',\n          rows: 10,\n        })}\n        <Button\n          className=\"Button\"\n          onclick={() => {\n            this.settings['fof-pretty-mail.newPost'](defaults.newPost);\n            m.redraw();\n          }}\n        >\n          {app.translator.trans('fof-pretty-mail.admin.settings.reset')}\n        </Button>\n      </div>,\n      85\n    );\n\n    return items;\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export const mailto = `<html>\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n    <style type=\"text/css\">\n        body {\n            font-family: 'Open Sans', sans-serif;\n            background: white;\n            color: #426799;\n            margin: 0;\n            padding: 0;\n        }\n        .content {\n            box-sizing: border-box;\n            width: 100%;\n            max-width: 500px;\n            margin: 0 auto;\n            padding: 10px 20px;\n        }\n        .header {\n            border-bottom: 1px solid #e8ecf3;\n         }\n         .header a {\n            color: {{ $settings->get('theme_primary_color') }};\n            text-decoration: none;\n         }\n         .footer {\n            background: #e8ecf3;\n         }\n    </style>\n    @if ($forumStyle !== '')\n    <style>\n        {!! $forumStyle !!}\n    </style>\n    @endif\n</head>\n<body>\n<div class=\"header\">\n    <div class=\"content\">\n        <a href=\"{{ $url->to('forum')->base() }}\">{{ $settings->get('forum_title') }}</a>\n    </div>\n</div>\n<div class=\"content\">\n    {!! $body !!}\n</div>\n<div class=\"footer\">\n    <div class=\"content\">\n        <p>Sent from {{ $settings->get('forum_title') }} using FoF Pretty Mail</p>\n    </div>\n</div>\n</body>\n</html>`;\n\nexport const newPost = `<html>\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n    <style type=\"text/css\">\n        body {\n            font-family: 'Open Sans', sans-serif;\n            background: white;\n            color: #426799;\n            margin: 0;\n            padding: 0;\n        }\n        .content {\n            box-sizing: border-box;\n            width: 100%;\n            max-width: 500px;\n            margin: 0 auto;\n            padding: 10px 20px;\n        }\n        .header {\n            border-bottom: 1px solid #e8ecf3;\n        }\n        .header a {\n            color: {{ $settings->get('theme_primary_color') }};\n            text-decoration: none;\n        }\n        .footer {\n            background: #e8ecf3;\n        }\n    </style>\n    <style>\n        {!! $forumStyle !!}\n    </style>\n</head>\n<body>\n<div class=\"header\">\n    <div class=\"content\">\n        <a href=\"{{ $url->to('forum')->base() }}\">{{ $settings->get('forum_title') }}</a>\n    </div>\n</div>\n<div class=\"content\">\n    <div class=\"info\">\n        <p>Hey {!! $user->display_name !!}!</p>\n\n        <p><a href=\"{{ $url->to('forum')->route('user', ['username' => $blueprint->post->user->username]) }}\">{!! $blueprint->post->user->username !!}</a> made a post in a discussion you're following: <a href=\"{{ $url->to('forum')->route('discussion', ['id' => $blueprint->post->discussion_id, 'near' => $blueprint->post->number]) }}\">{!! $blueprint->post->discussion->title !!}</a></p>\n\n        ---\n\n    </div>\n    <br/>\n    <div class=\"post-content\">\n        {!! $blueprint->post->formatContent() !!}\n    </div>\n    <br/>\n    <div class=\"info\">\n        ---\n\n        <p>You won't receive any more notifications about this discussion until you're up-to-date.</p>\n    </div>\n</div>\n<div class=\"footer\">\n    <div class=\"content\">\n        <p>Sent from {{ $settings->get('forum_title') }} using FoF Pretty Mail</p>\n    </div>\n</div>\n</body>\n</html>`;\n\nexport const userMentioned = `<html>\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n    <style type=\"text/css\">\n        body {\n            font-family: 'Open Sans', sans-serif;\n            background: white;\n            color: #426799;\n            margin: 0;\n            padding: 0;\n        }\n        .content {\n            box-sizing: border-box;\n            width: 100%;\n            max-width: 500px;\n            margin: 0 auto;\n            padding: 10px 20px;\n        }\n        .header {\n            border-bottom: 1px solid #e8ecf3;\n        }\n        .header a {\n            color: {{ $settings->get('theme_primary_color') }};\n            text-decoration: none;\n        }\n        .footer {\n            background: #e8ecf3;\n        }\n    </style>\n    <style>\n        {!! $forumStyle !!}\n    </style>\n</head>\n<body>\n<div class=\"header\">\n    <div class=\"content\">\n        <a href=\"{{ $url->to('forum')->base() }}\">{{ $settings->get('forum_title') }}</a>\n    </div>\n</div>\n<div class=\"content\">\n    <div class=\"info\">\n        <p>Hey {!! $user->display_name !!}!</p>\n\n        <p><a href=\"{{!! $url->to('forum')->route('user', ['username' => $blueprint->post->user->username]) !!}}\">{!! $blueprint->post->user->username !!}</a> mentioned you in a post in <a href=\"{{!! $url->to('forum')->route('discussion', ['id' => $blueprint->post->discussion_id, 'near' => $blueprint->post->number]) !!}}\">{!! $blueprint->post->discussion->title !!}</a>.</p>\n\n        ---\n\n    </div>\n    <br/>\n    <div class=\"post-content\">\n        {!! $blueprint->post->formatContent() !!}\n    </div>\n    <br/>\n</div>\n<div class=\"footer\">\n    <div class=\"content\">\n        <p>Sent from {{ $settings->get('forum_title') }} using FoF Pretty Mail</p>\n    </div>\n</div>\n</body>\n</html>`;\n\nexport const postMentioned = `<html>\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n    <style type=\"text/css\">\n        body {\n            font-family: 'Open Sans', sans-serif;\n            background: white;\n            color: #426799;\n            margin: 0;\n            padding: 0;\n        }\n        .content {\n            box-sizing: border-box;\n            width: 100%;\n            max-width: 500px;\n            margin: 0 auto;\n            padding: 10px 20px;\n        }\n        .header {\n            border-bottom: 1px solid #e8ecf3;\n        }\n        .header a {\n            color: {{ $settings->get('theme_primary_color') }};\n            text-decoration: none;\n        }\n        .footer {\n            background: #e8ecf3;\n        }\n    </style>\n    <style>\n        {!! $forumStyle !!}\n    </style>\n</head>\n<body>\n<div class=\"header\">\n    <div class=\"content\">\n        <a href=\"{{ $url->to('forum')->base() }}\">{{ $settings->get('forum_title') }}</a>\n    </div>\n</div>\n<div class=\"content\">\n    <div class=\"info\">\n        <p>Hey {!! $user->display_name !!}!</p>\n\n        <p><a href=\"{{ $url->to('forum')->route('user', ['username' => $blueprint->reply->user->username]) }}\">{!! $blueprint->reply->user->username !!}</a> replied to your post (#{!! $blueprint->post->number !!}) in <a href=\"{{ $url->to('forum')->route('discussion', ['id' => $blueprint->post->discussion_id, 'near' => $blueprint->reply->number]) }}\">{!! $blueprint->post->discussion->title !!}</a>.</p>\n\n        ---\n\n    </div>\n    <br/>\n    <div class=\"post-content\">\n        {!! $blueprint->reply->formatContent() !!}\n    </div>\n    <br/>\n</div>\n<div class=\"footer\">\n    <div class=\"content\">\n        <p>Sent from {{ $settings->get('forum_title') }} using FoF Pretty Mail</p>\n    </div>\n</div>\n</body>\n</html>`;\n","import PrettyMailSettingsPage from './PrettyMailSettingsPage';\n\nexport const components = {\n  PrettyMailSettingsPage,\n};\n","import app from 'flarum/admin/app';\nimport PrettyMailSettingsPage from './components/PrettyMailSettingsPage';\n\nexport * from './components';\n\napp.initializers.add('fof-pretty-mail', () => {\n  app.extensionData.for('fof-pretty-mail').registerPage(PrettyMailSettingsPage);\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","PrettyMailSettingsPage","_ExtensionPage","subClass","superClass","apply","arguments","create","constructor","_proto","content","_this","m","className","app","trans","FieldSet","label","this","templateAttributes","map","attribute","buildSettingComponent","type","setting","rows","Button","onclick","settings","redraw","templateItems","toArray","cssItems","submitButton","concat","items","ItemList","add","help","strong","_this2","ExtensionPage","components","registerPage"],"sourceRoot":""}