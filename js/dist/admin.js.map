{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@fof/pretty-mail/webpack/bootstrap","webpack://@fof/pretty-mail/webpack/runtime/compat get default export","webpack://@fof/pretty-mail/webpack/runtime/define property getters","webpack://@fof/pretty-mail/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/pretty-mail/webpack/runtime/make namespace object","webpack://@fof/pretty-mail/external root \"flarum.core.compat['admin/app']\"","webpack://@fof/pretty-mail/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/pretty-mail/external root \"flarum.core.compat['components/Button']\"","webpack://@fof/pretty-mail/external root \"flarum.core.compat['components/ExtensionPage']\"","webpack://@fof/pretty-mail/external root \"flarum.core.compat['utils/saveSettings']\"","webpack://@fof/pretty-mail/external root \"flarum.core.compat['components/Switch']\"","webpack://@fof/pretty-mail/external root \"flarum.core.compat['utils/withAttr']\"","webpack://@fof/pretty-mail/external root \"flarum.core.compat['utils/Stream']\"","webpack://@fof/pretty-mail/./src/admin/components/SettingsPage.js","webpack://@fof/pretty-mail/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/pretty-mail/./src/admin/defaults.js","webpack://@fof/pretty-mail/./src/admin/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/ExtensionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/saveSettings'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Switch'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/withAttr'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/Stream'];","import app from 'flarum/admin/app';\nimport Button from 'flarum/components/Button';\nimport ExtensionPage from 'flarum/components/ExtensionPage';\nimport saveSettings from 'flarum/utils/saveSettings';\nimport Switch from 'flarum/components/Switch';\nimport withAttr from 'flarum/utils/withAttr';\nimport Stream from 'flarum/utils/Stream';\n\nimport * as defaults from '../defaults';\n\nexport default class SettingsPage extends ExtensionPage {\n    oninit(vnode) {\n        super.oninit(vnode);\n        this.fields = ['mailhtml', 'newPost', 'postMentioned', 'userMentioned', 'includeCSS'];\n\n        this.values = [];\n\n        this.settingsPrefix = 'fof-pretty-mail';\n\n        const settings = app.data.settings;\n\n        this.fields.forEach((key) => (this.values[key] = Stream(settings[this.addPrefix(key)])));\n    }\n\n    content() {\n        return [\n            m('div', { style: 'padding-bottom: 20px', className: 'SettingsPage' }, [\n                m('div', { className: 'container' }, [\n                    m('Form-group', [\n                        m('Form', { onsubmit: this.onsubmit.bind(this) }, [\n                            m('h1', app.translator.trans('fof-pretty-mail.admin.settings.label')),\n                            m(\n                                'div',\n                                {\n                                    className: 'helpText',\n                                    style: 'margin: 10px 0 10px',\n                                },\n                                app.translator.trans('fof-pretty-mail.admin.settings.help', { strong: <strong /> })\n                            ),\n                            m('label', app.translator.trans('fof-pretty-mail.admin.settings.default')),\n                            m('br'),\n                            Button.component(\n                                {\n                                    type: 'button',\n                                    style: 'margin-bottom: 10px',\n                                    className: 'Button Button--primary',\n                                    onclick: () => {\n                                        if (confirm(app.translator.trans('fof-pretty-mail.admin.settings.confirm') + ' default?')) {\n                                            this.values.mailhtml(defaults.mailto);\n                                        }\n                                    },\n                                },\n                                app.translator.trans('fof-pretty-mail.admin.settings.reset')\n                            ),\n                            m('textarea.FormControl', {\n                                rows: '15',\n                                value: this.values.mailhtml(),\n                                style: 'margin: 10px 0 10px',\n                                oninput: withAttr('value', this.values.mailhtml),\n                            }),\n                            m('h3', app.translator.trans('fof-pretty-mail.admin.settings.notifications')),\n                            m(\n                                'div',\n                                {\n                                    className: 'helpText',\n                                    style: 'margin-top: 10px',\n                                },\n                                app.translator.trans('fof-pretty-mail.admin.settings.notificationHelp')\n                            ),\n                            m('label', app.translator.trans('fof-pretty-mail.admin.settings.newPost')),\n                            m('br'),\n                            Button.component(\n                                {\n                                    type: 'button',\n                                    style: 'margin: 10px 0 10px',\n                                    className: 'Button Button--primary',\n                                    onclick: () => {\n                                        if (confirm(app.translator.trans('fof-pretty-mail.admin.settings.confirm') + ' newPost?')) {\n                                            this.values.newPost(defaults.newPost);\n                                        }\n                                    },\n                                },\n                                app.translator.trans('fof-pretty-mail.admin.settings.reset')\n                            ),\n                            m('textarea.FormControl', {\n                                rows: '15',\n                                value: this.values.newPost(),\n                                style: 'margin-bottom: 10px',\n                                oninput: withAttr('value', this.values.newPost),\n                            }),\n                            m('label', app.translator.trans('fof-pretty-mail.admin.settings.userMentioned')),\n                            m('br'),\n                            Button.component(\n                                {\n                                    type: 'button',\n                                    style: 'margin: 10px 0 10px',\n                                    className: 'Button Button--primary',\n                                    onclick: () => {\n                                        if (confirm(app.translator.trans('fof-pretty-mail.admin.settings.confirm') + ' userMentioned?')) {\n                                            this.values.userMentioned(defaults.userMentioned);\n                                        }\n                                    },\n                                },\n                                app.translator.trans('fof-pretty-mail.admin.settings.reset')\n                            ),\n                            m('textarea.FormControl', {\n                                rows: '15',\n                                value: this.values.userMentioned(),\n                                style: 'margin-bottom: 10px',\n                                oninput: withAttr('value', this.values.userMentioned),\n                            }),\n                            m('label', app.translator.trans('fof-pretty-mail.admin.settings.postMentioned')),\n                            m('br'),\n                            Button.component(\n                                {\n                                    type: 'button',\n                                    style: 'margin: 10px 0 10px',\n                                    className: 'Button Button--primary',\n                                    onclick: () => {\n                                        if (confirm(app.translator.trans('fof-pretty-mail.admin.settings.confirm') + ' postMentioned?')) {\n                                            this.values.postMentioned(defaults.postMentioned);\n                                        }\n                                    },\n                                },\n                                app.translator.trans('fof-pretty-mail.admin.settings.reset')\n                            ),\n                            m('textarea.FormControl', {\n                                rows: '15',\n                                value: this.values.postMentioned(),\n                                style: 'margin-bottom: 10px',\n                                oninput: withAttr('value', this.values.postMentioned),\n                            }),\n                            m('h1', app.translator.trans('fof-pretty-mail.admin.css_settings.label')),\n                            m(\n                                'div',\n                                {\n                                    className: 'helpText',\n                                    style: 'margin: 10px 0 10px',\n                                },\n                                app.translator.trans('fof-pretty-mail.admin.css_settings.help', { strong: <strong /> })\n                            ),\n                            Switch.component(\n                                {\n                                    className: 'Form-group',\n                                    state: this.values.includeCSS() === '1',\n                                    onchange: (enabled) => this.values.includeCSS(enabled ? '1' : '0'),\n                                },\n                                app.translator.trans('fof-pretty-mail.admin.css_settings.switch_label')\n                            ),\n                            Button.component(\n                                {\n                                    type: 'submit',\n                                    className: 'Button Button--primary',\n                                    loading: this.loading,\n                                    disabled: !this.changed(),\n                                },\n                                app.translator.trans('core.admin.settings.submit_button')\n                            ),\n                        ]),\n                    ]),\n                ]),\n            ]),\n        ];\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    changed() {\n        var fieldsCheck = this.fields.some((key) => this.values[key]() !== app.data.settings[this.addPrefix(key)]);\n        return fieldsCheck;\n    }\n\n    /**\n     * @param e\n     */\n    onsubmit(e) {\n        e.preventDefault();\n\n        if (this.loading) return;\n\n        this.loading = true;\n\n        const settings = {};\n\n        this.fields.forEach((key) => (settings[this.addPrefix(key)] = this.values[key]()));\n\n        saveSettings(settings).then(() => {\n            this.loading = false;\n            app.alerts.show({ type: 'success' }, app.translator.trans('core.admin.basics.saved_message'));\n        });\n    }\n\n    /**\n     * @returns string\n     */\n    addPrefix(key) {\n        return this.settingsPrefix + '.' + key;\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export const mailto = `<html>\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n    <style type=\"text/css\">\n        body {\n            font-family: 'Open Sans', sans-serif;\n            background: white;\n            color: #426799;\n            margin: 0;\n            padding: 0;\n        }\n        .content {\n            box-sizing: border-box;\n            width: 100%;\n            max-width: 500px;\n            margin: 0 auto;\n            padding: 10px 20px;\n        }\n        .header {\n            border-bottom: 1px solid #e8ecf3;\n         }\n         .header a {\n            color: {{ $settings->get('theme_primary_color') }};\n            text-decoration: none;\n         }\n         .footer {\n            background: #e8ecf3;\n         }\n    </style>\n    @if ($forumStyle !== '')\n    <style>\n        {!! $forumStyle !!}\n    </style>\n    @endif\n</head>\n<body>\n<div class=\"header\">\n    <div class=\"content\">\n        <a href=\"{{ $url->to('forum')->base() }}\">{{ $settings->get('forum_title') }}</a>\n    </div>\n</div>\n<div class=\"content\">\n    {!! $body !!}\n</div>\n<div class=\"footer\">\n    <div class=\"content\">\n        <p>Sent from {{ $settings->get('forum_title') }} using FoF Pretty Mail</p>\n    </div>\n</div>\n</body>\n</html>`;\n\nexport const newPost = `<html>\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n    <style type=\"text/css\">\n        body {\n            font-family: 'Open Sans', sans-serif;\n            background: white;\n            color: #426799;\n            margin: 0;\n            padding: 0;\n        }\n        .content {\n            box-sizing: border-box;\n            width: 100%;\n            max-width: 500px;\n            margin: 0 auto;\n            padding: 10px 20px;\n        }\n        .header {\n            border-bottom: 1px solid #e8ecf3;\n        }\n        .header a {\n            color: {{ $settings->get('theme_primary_color') }};\n            text-decoration: none;\n        }\n        .footer {\n            background: #e8ecf3;\n        }\n    </style>\n    <style>\n        {!! $forumStyle !!}\n    </style>\n</head>\n<body>\n<div class=\"header\">\n    <div class=\"content\">\n        <a href=\"{{ $url->to('forum')->base() }}\">{{ $settings->get('forum_title') }}</a>\n    </div>\n</div>\n<div class=\"content\">\n    <div class=\"info\">\n        <p>Hey {!! $user->display_name !!}!</p>\n\n        <p><a href=\"{{ $url->to('forum')->route('user', ['username' => $blueprint->post->user->username]) }}\">{!! $blueprint->post->user->username !!}</a> made a post in a discussion you're following: <a href=\"{{ $url->to('forum')->route('discussion', ['id' => $blueprint->post->discussion_id, 'near' => $blueprint->post->number]) }}\">{!! $blueprint->post->discussion->title !!}</a></p>\n\n        ---\n\n    </div>\n    <br/>\n    <div class=\"post-content\">\n        {!! $blueprint->post->formatContent() !!}\n    </div>\n    <br/>\n    <div class=\"info\">\n        ---\n\n        <p>You won't receive any more notifications about this discussion until you're up-to-date.</p>\n    </div>\n</div>\n<div class=\"footer\">\n    <div class=\"content\">\n        <p>Sent from {{ $settings->get('forum_title') }} using FoF Pretty Mail</p>\n    </div>\n</div>\n</body>\n</html>`;\n\nexport const userMentioned = `<html>\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n    <style type=\"text/css\">\n        body {\n            font-family: 'Open Sans', sans-serif;\n            background: white;\n            color: #426799;\n            margin: 0;\n            padding: 0;\n        }\n        .content {\n            box-sizing: border-box;\n            width: 100%;\n            max-width: 500px;\n            margin: 0 auto;\n            padding: 10px 20px;\n        }\n        .header {\n            border-bottom: 1px solid #e8ecf3;\n        }\n        .header a {\n            color: {{ $settings->get('theme_primary_color') }};\n            text-decoration: none;\n        }\n        .footer {\n            background: #e8ecf3;\n        }\n    </style>\n    <style>\n        {!! $forumStyle !!}\n    </style>\n</head>\n<body>\n<div class=\"header\">\n    <div class=\"content\">\n        <a href=\"{{ $url->to('forum')->base() }}\">{{ $settings->get('forum_title') }}</a>\n    </div>\n</div>\n<div class=\"content\">\n    <div class=\"info\">\n        <p>Hey {!! $user->display_name !!}!</p>\n\n        <p><a href=\"{{!! $url->to('forum')->route('user', ['username' => $blueprint->post->user->username]) !!}}\">{!! $blueprint->post->user->username !!}</a> mentioned you in a post in <a href=\"{{!! $url->to('forum')->route('discussion', ['id' => $blueprint->post->discussion_id, 'near' => $blueprint->post->number]) !!}}\">{!! $blueprint->post->discussion->title !!}</a>.</p>\n\n        ---\n\n    </div>\n    <br/>\n    <div class=\"post-content\">\n        {!! $blueprint->post->formatContent() !!}\n    </div>\n    <br/>\n</div>\n<div class=\"footer\">\n    <div class=\"content\">\n        <p>Sent from {{ $settings->get('forum_title') }} using FoF Pretty Mail</p>\n    </div>\n</div>\n</body>\n</html>`;\n\nexport const postMentioned = `<html>\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n    <style type=\"text/css\">\n        body {\n            font-family: 'Open Sans', sans-serif;\n            background: white;\n            color: #426799;\n            margin: 0;\n            padding: 0;\n        }\n        .content {\n            box-sizing: border-box;\n            width: 100%;\n            max-width: 500px;\n            margin: 0 auto;\n            padding: 10px 20px;\n        }\n        .header {\n            border-bottom: 1px solid #e8ecf3;\n        }\n        .header a {\n            color: {{ $settings->get('theme_primary_color') }};\n            text-decoration: none;\n        }\n        .footer {\n            background: #e8ecf3;\n        }\n    </style>\n    <style>\n        {!! $forumStyle !!}\n    </style>\n</head>\n<body>\n<div class=\"header\">\n    <div class=\"content\">\n        <a href=\"{{ $url->to('forum')->base() }}\">{{ $settings->get('forum_title') }}</a>\n    </div>\n</div>\n<div class=\"content\">\n    <div class=\"info\">\n        <p>Hey {!! $user->display_name !!}!</p>\n\n        <p><a href=\"{{ $url->to('forum')->route('user', ['username' => $blueprint->reply->user->username]) }}\">{!! $blueprint->reply->user->username !!}</a> replied to your post (#{!! $blueprint->post->number !!}) in <a href=\"{{ $url->to('forum')->route('discussion', ['id' => $blueprint->post->discussion_id, 'near' => $blueprint->reply->number]) }}\">{!! $blueprint->post->discussion->title !!}</a>.</p>\n\n        ---\n\n    </div>\n    <br/>\n    <div class=\"post-content\">\n        {!! $blueprint->reply->formatContent() !!}\n    </div>\n    <br/>\n</div>\n<div class=\"footer\">\n    <div class=\"content\">\n        <p>Sent from {{ $settings->get('forum_title') }} using FoF Pretty Mail</p>\n    </div>\n</div>\n</body>\n</html>`;\n","import app from 'flarum/admin/app';\nimport SettingsPage from './components/SettingsPage';\n\napp.initializers.add('fof-pretty-mail', () => {\n    app.extensionData.for('fof-pretty-mail').registerPage(SettingsPage);\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","__proto__","SettingsPage","subClass","superClass","create","constructor","oninit","vnode","this","fields","values","settingsPrefix","settings","app","forEach","Stream","addPrefix","content","m","style","className","onsubmit","bind","strong","Button","type","onclick","confirm","mailhtml","rows","oninput","withAttr","newPost","userMentioned","postMentioned","Switch","state","includeCSS","onchange","enabled","loading","disabled","changed","some","e","preventDefault","saveSettings","then","ExtensionPage","registerPage"],"sourceRoot":""}