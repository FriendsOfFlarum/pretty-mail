{"version":3,"sources":["webpack://@fof/pretty-mail/webpack/bootstrap","webpack://@fof/pretty-mail/external \"flarum.core.compat['components/Button']\"","webpack://@fof/pretty-mail/external \"flarum.core.compat['app']\"","webpack://@fof/pretty-mail/external \"flarum.core.compat['extend']\"","webpack://@fof/pretty-mail/external \"flarum.core.compat['components/AdminNav']\"","webpack://@fof/pretty-mail/external \"flarum.core.compat['components/AdminLinkButton']\"","webpack://@fof/pretty-mail/external \"flarum.core.compat['components/Alert']\"","webpack://@fof/pretty-mail/external \"flarum.core.compat['components/Page']\"","webpack://@fof/pretty-mail/external \"flarum.core.compat['utils/saveSettings']\"","webpack://@fof/pretty-mail/external \"flarum.core.compat['components/Switch']\"","webpack://@fof/pretty-mail/./src/admin/components/SettingsPage.js","webpack://@fof/pretty-mail/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/pretty-mail/./src/admin/defaults.js","webpack://@fof/pretty-mail/./src/admin/index.js","webpack://@fof/pretty-mail/./src/admin/addSettingsPage.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","SettingsPage","subClass","superClass","constructor","__proto__","init","this","fields","values","settingsPrefix","settings","app","data","forEach","prop","addPrefix","view","style","className","onsubmit","translator","trans","strong","Button","component","type","children","onclick","confirm","mailhtml","rows","oninput","withAttr","newPost","userMentioned","postMentioned","Switch","state","includeCSS","onchange","enabled","loading","disabled","changed","some","e","preventDefault","alerts","dismiss","successAlert","saveSettings","then","show","Alert","Page","initializers","add","routes","path","extensionSettings","route","extend","AdminNav","items","AdminLinkButton","href","icon","description"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/AdminLinkButton'];","module.exports = flarum.core.compat['components/Alert'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['utils/saveSettings'];","module.exports = flarum.core.compat['components/Switch'];","import Alert from 'flarum/components/Alert';\r\nimport Button from 'flarum/components/Button';\r\nimport Page from 'flarum/components/Page';\r\nimport saveSettings from 'flarum/utils/saveSettings';\r\nimport Switch from 'flarum/components/Switch';\r\n\r\nimport * as defaults from '../defaults';\r\n\r\nexport default class SettingsPage extends Page {\r\n    init() {\r\n        this.fields = ['mailhtml', 'newPost', 'postMentioned', 'userMentioned', 'includeCSS'];\r\n\r\n        this.values = {};\r\n\r\n        this.settingsPrefix = 'fof-pretty-mail';\r\n\r\n        const settings = app.data.settings;\r\n\r\n        this.fields.forEach(key => (this.values[key] = m.prop(settings[this.addPrefix(key)])));\r\n    }\r\n\r\n    view() {\r\n        return [\r\n            m('div', { style: 'padding-bottom: 20px', className: 'SettingsPage' }, [\r\n                m('div', { className: 'container' }, [\r\n                    m('Form-group', [\r\n                        m('Form', { onsubmit: this.onsubmit.bind(this) }, [\r\n                            m('h1', app.translator.trans('fof-pretty-mail.admin.settings.label')),\r\n                            m(\r\n                                'div',\r\n                                {\r\n                                    className: 'helpText',\r\n                                    style: 'margin: 10px 0 10px',\r\n                                },\r\n                                app.translator.trans('fof-pretty-mail.admin.settings.help', { strong: <strong /> })\r\n                            ),\r\n                            m('label', app.translator.trans('fof-pretty-mail.admin.settings.default')),\r\n                            m('br'),\r\n                            Button.component({\r\n                                type: 'button',\r\n                                style: 'margin-bottom: 10px',\r\n                                className: 'Button Button--primary',\r\n                                children: app.translator.trans('fof-pretty-mail.admin.settings.reset'),\r\n                                onclick: () => {\r\n                                    if (confirm(app.translator.trans('fof-pretty-mail.admin.settings.confirm') + ' default?')) {\r\n                                        this.values.mailhtml(defaults.mailto);\r\n                                    }\r\n                                },\r\n                            }),\r\n                            m('textarea.FormControl', {\r\n                                rows: '15',\r\n                                value: this.values.mailhtml(),\r\n                                style: 'margin: 10px 0 10px',\r\n                                oninput: m.withAttr('value', this.values.mailhtml),\r\n                            }),\r\n                            m('h3', app.translator.trans('fof-pretty-mail.admin.settings.notifications')),\r\n                            m(\r\n                                'div',\r\n                                {\r\n                                    className: 'helpText',\r\n                                    style: 'margin-top: 10px',\r\n                                },\r\n                                app.translator.trans('fof-pretty-mail.admin.settings.notificationHelp')\r\n                            ),\r\n                            m('label', app.translator.trans('fof-pretty-mail.admin.settings.newPost')),\r\n                            m('br'),\r\n                            Button.component({\r\n                                type: 'button',\r\n                                style: 'margin: 10px 0 10px',\r\n                                className: 'Button Button--primary',\r\n                                children: app.translator.trans('fof-pretty-mail.admin.settings.reset'),\r\n                                onclick: () => {\r\n                                    if (confirm(app.translator.trans('fof-pretty-mail.admin.settings.confirm') + ' newPost?')) {\r\n                                        this.values.newPost(defaults.newPost);\r\n                                    }\r\n                                },\r\n                            }),\r\n                            m('textarea.FormControl', {\r\n                                rows: '15',\r\n                                value: this.values.newPost(),\r\n                                style: 'margin-bottom: 10px',\r\n                                oninput: m.withAttr('value', this.values.newPost),\r\n                            }),\r\n                            m('label', app.translator.trans('fof-pretty-mail.admin.settings.userMentioned')),\r\n                            m('br'),\r\n                            Button.component({\r\n                                type: 'button',\r\n                                style: 'margin: 10px 0 10px',\r\n                                className: 'Button Button--primary',\r\n                                children: app.translator.trans('fof-pretty-mail.admin.settings.reset'),\r\n                                onclick: () => {\r\n                                    if (confirm(app.translator.trans('fof-pretty-mail.admin.settings.confirm') + ' userMentioned?')) {\r\n                                        this.values.userMentioned(defaults.userMentioned);\r\n                                    }\r\n                                },\r\n                            }),\r\n                            m('textarea.FormControl', {\r\n                                rows: '15',\r\n                                value: this.values.userMentioned(),\r\n                                style: 'margin-bottom: 10px',\r\n                                oninput: m.withAttr('value', this.values.userMentioned),\r\n                            }),\r\n                            m('label', app.translator.trans('fof-pretty-mail.admin.settings.postMentioned')),\r\n                            m('br'),\r\n                            Button.component({\r\n                                type: 'button',\r\n                                style: 'margin: 10px 0 10px',\r\n                                className: 'Button Button--primary',\r\n                                children: app.translator.trans('fof-pretty-mail.admin.settings.reset'),\r\n                                onclick: () => {\r\n                                    if (confirm(app.translator.trans('fof-pretty-mail.admin.settings.confirm') + ' postMentioned?')) {\r\n                                        this.values.postMentioned(defaults.postMentioned);\r\n                                    }\r\n                                },\r\n                            }),\r\n                            m('textarea.FormControl', {\r\n                                rows: '15',\r\n                                value: this.values.postMentioned(),\r\n                                style: 'margin-bottom: 10px',\r\n                                oninput: m.withAttr('value', this.values.postMentioned),\r\n                            }),\r\n                            m('h1', app.translator.trans('fof-pretty-mail.admin.css_settings.label')),\r\n                            m(\r\n                                'div',\r\n                                {\r\n                                    className: 'helpText',\r\n                                    style: 'margin: 10px 0 10px',\r\n                                },\r\n                                app.translator.trans('fof-pretty-mail.admin.css_settings.help', { strong: <strong /> })\r\n                            ),\r\n                            Switch.component({\r\n                                className: 'Form-group',\r\n                                state: this.values.includeCSS() === '1',\r\n                                onchange: enabled => this.values.includeCSS(enabled ? '1' : '0'),\r\n                                children: app.translator.trans('fof-pretty-mail.admin.css_settings.switch_label'),\r\n                            }),\r\n                            Button.component({\r\n                                type: 'submit',\r\n                                className: 'Button Button--primary',\r\n                                children: app.translator.trans('core.admin.settings.submit_button'),\r\n                                loading: this.loading,\r\n                                disabled: !this.changed(),\r\n                            }),\r\n                        ]),\r\n                    ]),\r\n                ]),\r\n            ]),\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * @returns {boolean}\r\n     */\r\n    changed() {\r\n        var fieldsCheck = this.fields.some(key => this.values[key]() !== app.data.settings[this.addPrefix(key)]);\r\n        return fieldsCheck;\r\n    }\r\n\r\n    /**\r\n     * @param e\r\n     */\r\n    onsubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (this.loading) return;\r\n\r\n        this.loading = true;\r\n\r\n        app.alerts.dismiss(this.successAlert);\r\n\r\n        const settings = {};\r\n\r\n        this.fields.forEach(key => (settings[this.addPrefix(key)] = this.values[key]()));\r\n\r\n        saveSettings(settings).then(() => {\r\n            this.loading = false;\r\n            app.alerts.show(\r\n                (this.successAlert = new Alert({\r\n                    type: 'success',\r\n                    children: app.translator.trans('core.admin.basics.saved_message'),\r\n                }))\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @returns string\r\n     */\r\n    addPrefix(key) {\r\n        return this.settingsPrefix + '.' + key;\r\n    }\r\n}\r\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","export const mailto = `<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n        <style type=\"text/css\">\n            body {\n                font-family: 'Open Sans', sans-serif;\n                background: white;\n                color: #426799;\n                margin: 0;\n                padding: 0;\n            }\n            .content {\n                box-sizing: border-box;\n                width: 100%;\n                max-width: 500px;\n                margin: 0 auto;\n                padding: 10px 20px;\n            }\n            .header {\n                border-bottom: 1px solid #e8ecf3;\n             }\n             .header a {\n                color: {{ $settings->get('theme_primary_color') }};\n                text-decoration: none;\n             }\n             .footer {\n                background: #e8ecf3;\n             }\n        </style>\n        @if ($forumStyle !== '')\n        <style>\n            {!! $forumStyle !!}\n        </style>\n        @endif\n    </head>\n</html>\n<body>\n    <div class=\"header\">\n        <div class=\"content\">\n            <a href=\"{{ $baseUrl }}\">{{ $settings->get('forum_title') }}</a>\n        </div>\n    </div>\n    <div class=\"content\">\n        {!! $body !!}\n    </div>\n    <div class=\"footer\">\n        <div class=\"content\">\n            <p>Sent from {{ $settings->get('forum_title') }} using the Pretty Mail extension</p>\n        </div>\n    </div>\n</body>`;\n\nexport const newPost = `<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n        <style type=\"text/css\">\n            body {\n                font-family: 'Open Sans', sans-serif;\n                background: white;\n                color: #426799;\n                margin: 0;\n                padding: 0;\n            }\n            .content {\n                box-sizing: border-box;\n                width: 100%;\n                max-width: 500px;\n                margin: 0 auto;\n                padding: 10px 20px;\n            }\n            .header {\n                border-bottom: 1px solid #e8ecf3;\n            }\n            .header a {\n                color: {{ $settings->get('theme_primary_color') }};\n                text-decoration: none;\n            }\n            .footer {\n                background: #e8ecf3;\n            }\n        </style>\n        <style>\n            {!! $forumStyle !!}\n        </style>\n    </head>\n</html>\n<body>\n    <div class=\"header\">\n        <div class=\"content\">\n            <a href=\"{{ $baseUrl }}\">{{ $settings->get('forum_title') }}</a>\n        </div>\n    </div>\n    <div class=\"content\">\n        <div class=\"info\">\n            <p>Hey {!! $user->display_name !!}!</p>\n\n            <p>{!! $blueprint->post->user->display_name !!} made a post in a discussion you're following: {!! $blueprint->post->discussion->title !!}</p>\n\n            <p>To view the new activity, check out the following link:</p>\n            <p>{!! $baseUrl !!}/d/{!! $blueprint->post->discussion_id !!}/{!! $blueprint->post->number !!}</p>\n\n            ---\n\n        </div>\n        <br/>\n        <div class=\"post-content\">\n            {!! $blueprint->post->formatContent() !!}\n        </div>\n        <br/>\n        <div class=\"info\">\n            ---\n\n            <p>You won't receive any more notifications about this discussion until you're up-to-date.</p>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <div class=\"content\">\n            <p>Sent from {{ $settings->get('forum_title') }} using the Pretty Mail extension</p>\n        </div>\n    </div>\n</body>`;\n\nexport const userMentioned = `<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n        <style type=\"text/css\">\n            body {\n                font-family: 'Open Sans', sans-serif;\n                background: white;\n                color: #426799;\n                margin: 0;\n                padding: 0;\n            }\n            .content {\n                box-sizing: border-box;\n                width: 100%;\n                max-width: 500px;\n                margin: 0 auto;\n                padding: 10px 20px;\n            }\n            .header {\n                border-bottom: 1px solid #e8ecf3;\n            }\n            .header a {\n                color: {{ $settings->get('theme_primary_color') }};\n                text-decoration: none;\n            }\n            .footer {\n                background: #e8ecf3;\n            }\n        </style>\n        <style>\n            {!! $forumStyle !!}\n        </style>\n    </head>\n</html>\n<body>\n    <div class=\"header\">\n        <div class=\"content\">\n            <a href=\"{{ $baseUrl }}\">{{ $settings->get('forum_title') }}</a>\n        </div>\n    </div>\n    <div class=\"content\">\n        <div class=\"info\">\n            <p>Hey {!! $user->display_name !!}!</p>\n\n            <p>{!! $blueprint->post->user->username !!} mentioned you in a post in {!! $blueprint->post->discussion->title !!}.</p>\n\n            <p>{!! $baseUrl !!}/d/{!! $blueprint->post->discussion_id !!}/{!! $blueprint->post->number !!}</p>\n\n            ---\n\n        </div>\n        <br/>\n        <div class=\"post-content\">\n            {!! $blueprint->post->formatContent() !!}\n        </div>\n        <br/>\n    </div>\n    <div class=\"footer\">\n        <div class=\"content\">\n            <p>Sent from {{ $settings->get('forum_title') }} using the Pretty Mail extension</p>\n        </div>\n    </div>\n</body>`;\n\nexport const postMentioned = `<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n        <style type=\"text/css\">\n            body {\n                font-family: 'Open Sans', sans-serif;\n                background: white;\n                color: #426799;\n                margin: 0;\n                padding: 0;\n            }\n            .content {\n                box-sizing: border-box;\n                width: 100%;\n                max-width: 500px;\n                margin: 0 auto;\n                padding: 10px 20px;\n            }\n            .header {\n                border-bottom: 1px solid #e8ecf3;\n            }\n            .header a {\n                color: {{ $settings->get('theme_primary_color') }};\n                text-decoration: none;\n            }\n            .footer {\n                background: #e8ecf3;\n            }\n        </style>\n        <style>\n            {!! $forumStyle !!}\n        </style>\n    </head>\n</html>\n<body>\n    <div class=\"header\">\n        <div class=\"content\">\n            <a href=\"{{ $baseUrl }}\">{{ $settings->get('forum_title') }}</a>\n        </div>\n    </div>\n    <div class=\"content\">\n        <div class=\"info\">\n            <p>Hey {!! $user->display_name !!}!</p>\n\n            <p>{!! $blueprint->reply->user->username !!} replied to your post (#{!! $blueprint->post->number !!}) in {!! $blueprint->post->discussion->title !!}.</p>\n\n            <p>{!! app()->url() !!}/d/{!! $blueprint->reply->discussion_id !!}/{!! $blueprint->reply->number !!}</p>\n\n            ---\n\n        </div>\n        <br/>\n        <div class=\"post-content\">\n            {!! $blueprint->reply->formatContent() !!}\n        </div>\n        <br/>\n    </div>\n    <div class=\"footer\">\n        <div class=\"content\">\n            <p>Sent from {{ $settings->get('forum_title') }} using the Pretty Mail extension</p>\n        </div>\n    </div>\n</body>`;\n","import app from 'flarum/app';\r\nimport addSettingsPage from './addSettingsPage';\r\n\r\napp.initializers.add('fof-pretty-mail', () => {\r\n    // Add a settings pane for the extension\r\n    addSettingsPage();\r\n});\r\n","import { extend } from 'flarum/extend';\r\nimport AdminNav from 'flarum/components/AdminNav';\r\nimport AdminLinkButton from 'flarum/components/AdminLinkButton';\r\nimport SettingsPage from './components/SettingsPage';\r\n\r\nexport default function() {\r\n    app.routes['fof-pretty-mail'] = { path: '/fof/pretty-mail', component: SettingsPage.component() };\r\n\r\n    app.extensionSettings['fof-pretty-mail'] = () => m.route(app.route('fof-pretty-mail'));\r\n\r\n    extend(AdminNav.prototype, 'items', items => {\r\n        items.add(\r\n            'fof-pretty-mail',\r\n            AdminLinkButton.component({\r\n                href: app.route('fof-pretty-mail'),\r\n                icon: 'fas fa-envelope-open',\r\n                children: 'Pretty Mail',\r\n                description: app.translator.trans('fof-pretty-mail.admin.nav.desc'),\r\n            })\r\n        );\r\n    });\r\n}\r\n"],"sourceRoot":""}